---
- name: Apply security updates (Debian/Ubuntu)
  apt:
    upgrade: safe
    update_cache: yes
    autoremove: "{{ patch_autoremove }}"
    autoclean: yes
  when: 
    - ansible_os_family == "Debian"
    - patch_metrics.total_updates | int > 0
  register: apt_upgrade_result

- name: Apply security updates (RedHat/CentOS)
  yum:
    name: "*"
    state: latest
    update_cache: yes
  when: 
    - ansible_os_family == "RedHat"
    - patch_metrics.total_updates | int > 0
  register: yum_upgrade_result

- name: Check if reboot is required (Debian/Ubuntu)
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file
  when: ansible_os_family == "Debian"

- name: Set reboot required fact
  set_fact:
    reboot_needed: >-
      {{
        (ansible_os_family == "Debian" and reboot_required_file.stat.exists | default(false)) or
        (ansible_os_family == "RedHat" and yum_upgrade_result.changed | default(false))
      }}

- name: Reboot system if required and approved
  reboot:
    msg: "Rebooting after security patches"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: 
    - reboot_needed
    - patch_reboot_required
  register: reboot_result

- name: Update patch metrics after patching
  set_fact:
    patch_metrics: >-
      {{
        patch_metrics | combine({
          'patches_applied': apt_upgrade_result.changed | default(yum_upgrade_result.changed) | default(false),
          'patch_timestamp': ansible_date_time.iso8601,
          'reboot_performed': reboot_result.changed | default(false),
          'compliance_status': 'patched'
        })
      }}
  when: >
    apt_upgrade_result.changed | default(false) or 
    yum_upgrade_result.changed | default(false)

- name: Display patching result
  debug:
    msg: |
      Host: {{ inventory_hostname }}
      Patches Applied: {{ patch_metrics.patches_applied | default(false) }}
      Reboot Performed: {{ patch_metrics.reboot_performed | default(false) }}
      New Status: {{ patch_metrics.compliance_status | upper }}
#SPDX-License-Identifier: MIT-0
---
# tasks file for apply_patches
